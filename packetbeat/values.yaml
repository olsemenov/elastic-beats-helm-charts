---
# Allows you to add any config files in /usr/share/packetbeat
# such as packetbeat.yml
packetbeatConfig:
  packetbeat.yml: |
    packetbeat:
      flows:
        timeout: 30s
        period: 10s
      interfaces:
        device: any
      protocols:
        - type: dhcpv4
          ports: [67, 68]
        - type: dns
          ports: [53]
          include_authorities: true
          include_additionals: true
        - type: http
          ports: [80, 8080, 8081, 5000, 8002, 6666, 3000, 5601, 9100, 9090, 44134]
        - type: mongo
          ports: [27017, 27018, 27019]
    processors:
      - add_kubernetes_metadata:
          host: ${HOSTNAME}
          indexers:
          - ip_port:
          matchers:
          - field_format:
              format: '%{[ip]}:%{[port]}'
    output.elasticsearch:
      hosts: '${ELASTICSEARCH_HOSTS:elasticsearch-master:9200}'
      bulk_max_size: 400
      backoff.init: 20s
      max_retries: 5
      backoff.max: 600s
      worker: 2
      compression_level: 6
      index: 'packetbeat-${environment}-%{+yyyy.MM.dd}'
    cloud.auth: "${ELK_CLOUD_AUTH}"
    cloud.id: ${ELK_CLOUD_ID}

# Extra environment variables to append to the DaemonSet pod spec.
# This will be appended to the current 'env:' key. You can use any of the kubernetes env
# syntax here
extraEnvs: []
#  - name: MY_ENVIRONMENT_VAR
#    value: the_value_goes_here

extraVolumeMounts: []
  # - name: extras
  #   mountPath: /usr/share/extras
  #   readOnly: true

extraVolumes: []
  # - name: extras
  #   emptyDir: {}

extraContainers: ""
# - name: dummy-init
#   image: busybox
#   command: ['echo', 'hey']

extraInitContainers: []
# - name: dummy-init
#   image: busybox
#   command: ['echo', 'hey']

envFrom: []
# - configMapRef:
#     name: configmap-name

# Root directory where packetbeat will write data to in order to persist registry data across pod restarts (file position and other metadata).
hostPathRoot: /var/lib
hostNetworking: false
image: "docker.elastic.co/beats/packetbeat"
imageTag: "7.12.0"
imagePullPolicy: "IfNotPresent"
imagePullSecrets: []

livenessProbe:
#   exec:
#     command:
#       - sh
#       - -c
#       - |
#         #!/usr/bin/env bash -e
#         curl --fail 127.0.0.1:5066
#   failureThreshold: 3
#   initialDelaySeconds: 10
#   periodSeconds: 10
#   timeoutSeconds: 5

readinessProbe:
#   exec:
#     command:
#       - sh
#       - -c
#       - |
#         #!/usr/bin/env bash -e
#         packetbeat test output
#   failureThreshold: 3
#   initialDelaySeconds: 10
#   periodSeconds: 10
#   timeoutSeconds: 5

# Whether this chart should self-manage its service account, role, and associated role binding.
managedServiceAccount: true

# additionals labels
labels: {}

podAnnotations: {}
  # iam.amazonaws.com/role: es-cluster

# Various pod security context settings. Bear in mind that many of these have an impact on packetbeat functioning properly.
#
# - User that the container will execute as. Typically necessary to run as root (0) in order to properly collect host container logs.
# - Whether to execute the packetbeat containers as privileged containers. Typically not necessarily unless running within environments such as OpenShift.
podSecurityContext:
  runAsUser: 0
  privileged: false
  capabilities:
    add:
    - NET_ADMIN

resources:
  requests:
    cpu: "100m"
    memory: "100Mi"
  limits:
    cpu: "300m"
    memory: "200Mi"

# Custom service account override that the pod will use
serviceAccount: ""

# Annotations to add to the ServiceAccount that is created if the serviceAccount value isn't set.
serviceAccountAnnotations: {}
  # eks.amazonaws.com/role-arn: arn:aws:iam::111111111111:role/k8s.clustername.namespace.serviceaccount

# A list of secrets and their paths to mount inside the pod
# This is useful for mounting certificates for security other sensitive values
secretMounts: []
#  - name: packetbeat-certificates
#    secretName: packetbeat-certificates
#    path: /usr/share/packetbeat/certs

# How long to wait for packetbeat pods to stop gracefully
terminationGracePeriod: 30

tolerations: []

nodeSelector: {}

affinity: {}

# This is the PriorityClass settings as defined in
# https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass
priorityClassName: ""

updateStrategy: RollingUpdate

# Override various naming aspects of this chart
# Only edit these if you know what you're doing
nameOverride: ""
fullnameOverride: ""
